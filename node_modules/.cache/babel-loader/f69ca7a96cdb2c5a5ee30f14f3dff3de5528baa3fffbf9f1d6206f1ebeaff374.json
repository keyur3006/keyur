{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KEYUR\\\\Downloads\\\\my-app\\\\my-app\\\\src\\\\components\\\\SearchResults.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyRecipes = [{\n  id: 1,\n  name: \"Popular Indian Dishes\"\n}, {\n  id: 2,\n  name: \"Top Italian Main Course Dishes\"\n}, {\n  id: 3,\n  name: \"Popular Drinks\"\n}, {\n  id: 4,\n  name: \"Spicy Chicken Curry\"\n}, {\n  id: 5,\n  name: \"Sweet Mango Lassi\"\n}\n// ... यहाँ और recipe add कर सकते हो\n];\n\n// URL से query param निकालने के लिए helper function\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nconst SearchResults = () => {\n  _s2();\n  var _query$get;\n  const query = useQuery();\n  const searchTerm = ((_query$get = query.get(\"query\")) === null || _query$get === void 0 ? void 0 : _query$get.toLowerCase()) || \"\";\n\n  // Filter recipes based on search term\n  const filteredRecipes = dummyRecipes.filter(recipe => recipe.name.toLowerCase().includes(searchTerm));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-10 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6\",\n      children: [\"Search Results for \\\"\", searchTerm, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), filteredRecipes.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc list-inside text-xl\",\n      children: filteredRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipe/${recipe.id}`,\n          className: \"text-blue-600 hover:underline\",\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl\",\n      children: \"\\u0915\\u094B\\u0908 recipe \\u0928\\u0939\\u0940\\u0902 \\u092E\\u093F\\u0932\\u0940\\u0964\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s2(SearchResults, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useLocation","Link","jsxDEV","_jsxDEV","dummyRecipes","id","name","useQuery","_s","URLSearchParams","search","SearchResults","_s2","_query$get","query","searchTerm","get","toLowerCase","filteredRecipes","filter","recipe","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","to","_c","$RefreshReg$"],"sources":["C:/Users/KEYUR/Downloads/my-app/my-app/src/components/SearchResults.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nconst dummyRecipes = [\r\n  { id: 1, name: \"Popular Indian Dishes\" },\r\n  { id: 2, name: \"Top Italian Main Course Dishes\" },\r\n  { id: 3, name: \"Popular Drinks\" },\r\n  { id: 4, name: \"Spicy Chicken Curry\" },\r\n  { id: 5, name: \"Sweet Mango Lassi\" },\r\n  // ... यहाँ और recipe add कर सकते हो\r\n];\r\n\r\n// URL से query param निकालने के लिए helper function\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst SearchResults: React.FC = () => {\r\n  const query = useQuery();\r\n  const searchTerm = query.get(\"query\")?.toLowerCase() || \"\";\r\n\r\n  // Filter recipes based on search term\r\n  const filteredRecipes = dummyRecipes.filter((recipe) =>\r\n    recipe.name.toLowerCase().includes(searchTerm)\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-10 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-4xl font-bold mb-6\">Search Results for \"{searchTerm}\"</h1>\r\n      {filteredRecipes.length > 0 ? (\r\n        <ul className=\"list-disc list-inside text-xl\">\r\n          {filteredRecipes.map((recipe) => (\r\n            <li key={recipe.id} className=\"mb-3\">\r\n              {/* Recipe detail page पर ले जाने वाला लिंक */}\r\n              <Link to={`/recipe/${recipe.id}`} className=\"text-blue-600 hover:underline\">\r\n                {recipe.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-xl\">कोई recipe नहीं मिली।</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAwB,CAAC,EACxC;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAiC,CAAC,EACjD;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAiB,CAAC,EACjC;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAsB,CAAC,EACtC;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAoB;AACnC;AAAA,CACD;;AAED;AACA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,OAAO,IAAIC,eAAe,CAACT,WAAW,CAAC,CAAC,CAACU,MAAM,CAAC;AAClD;AAACF,EAAA,CAFQD,QAAQ;EAAA,QACYP,WAAW;AAAA;AAGxC,MAAMW,aAAuB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,UAAA;EACpC,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,MAAMQ,UAAU,GAAG,EAAAF,UAAA,GAAAC,KAAK,CAACE,GAAG,CAAC,OAAO,CAAC,cAAAH,UAAA,uBAAlBA,UAAA,CAAoBI,WAAW,CAAC,CAAC,KAAI,EAAE;;EAE1D;EACA,MAAMC,eAAe,GAAGd,YAAY,CAACe,MAAM,CAAEC,MAAM,IACjDA,MAAM,CAACd,IAAI,CAACW,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACN,UAAU,CAC/C,CAAC;EAED,oBACEZ,OAAA;IAAKmB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCpB,OAAA;MAAImB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,GAAC,uBAAoB,EAACR,UAAU,EAAC,IAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7ET,eAAe,CAACU,MAAM,GAAG,CAAC,gBACzBzB,OAAA;MAAImB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAC1CL,eAAe,CAACW,GAAG,CAAET,MAAM,iBAC1BjB,OAAA;QAAoBmB,SAAS,EAAC,MAAM;QAAAC,QAAA,eAElCpB,OAAA,CAACF,IAAI;UAAC6B,EAAE,EAAE,WAAWV,MAAM,CAACf,EAAE,EAAG;UAACiB,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EACxEH,MAAM,CAACd;QAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAJAP,MAAM,CAACf,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELxB,OAAA;MAAGmB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,GAAA,CA5BID,aAAuB;EAAA,QACbJ,QAAQ;AAAA;AAAAwB,EAAA,GADlBpB,aAAuB;AA8B7B,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}